
# required in order to utilize keep-alive connection
upstream {
  server 127.0.0.1:1980;
  keepalive 64;
};

server {
    listen 80;
    server_name $SITENAME;
    underscores_in_headers on;
    ignore_invalid_headers off;

    location /static {
        alias /home/$USERNAME/sites/$SITENAME/static;
    }

    location / {
        proxy_set_header Host $host;
        proxy_pass http://unix:/tmp/$SITENAME.socket;

        # Allows redefining or appending fields to the request header passed to
        # the proxied server. The value can contain text, variables, and their
        # combinations. These directives are inherited from the previous
        # level if and only if there are no proxy_set_header directives defined
        # on the current level. By default, only two fields are redefined:
        proxy_set_header Host $proxy_host; #NOTE: dont use this one, use 'Host' as defined above
        proxy_set_header Connection close;

        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;

        # may or may not work
        proxy_set_header HTTP_AUTHORIZATION $http_authorization;
        # or
        proxy_set_header Authorization $http_authorization;
        # may or may not be neccessary
        proxy_set_header Token $http_token;

        # Makes outgoing connections to a proxied server originate from the
        # specified local IP address with an optional port (1.11.2). Parameter
        # value can contain variables (1.3.12). The special value off (1.3.12)
        # cancels the effect of the proxy_bind directive inherited from the
        # previous configuration level, which allows the system to auto-assign
        # the local IP address and port.
        # The transparent parameter (1.11.0) allows outgoing connections to a
        # proxied server originate from a non-local IP address, for example,
        # from a real IP address of a client:
        proxy_bind $remote_addr transparent;

        # Configures the “TCP keepalive” behavior for outgoing connections to
        # a proxied server. By default, the operating system’s settings are in
        # effect for the socket. If the directive is set to the value “on”, the
        # SO_KEEPALIVE socket option is turned on for the socket.
        proxy_socket_keepalive on;

        # Sets the HTTP protocol version for proxying. By default, version 1.0
        # is used. Version 1.1 is recommended for use with keepalive
        # connections and NTLM authentication.
        proxy_http_version 1.1; # required in order to utilize keep-alive connection
        proxy_set_header Connection ""; # required in order to utilize keep-alive connection
        proxy_pass http://upstream; # required in order to utilize keep-alive connection, unsure how it would look or work as a socket

        # Configures the “TCP keepalive” behavior for the listening socket.
        # If this parameter is omitted then the operating system’s settings
        # will be in effect for the socket. If it is set to the value “on”,
        # the SO_KEEPALIVE option is turned on for the socket. If it is set to
        # the value “off”, the SO_KEEPALIVE option is turned off for the socket.
        # Some operating systems support setting of TCP keepalive parameters on
        # a per-socket basis using the TCP_KEEPIDLE, TCP_KEEPINTVL, and
        # TCP_KEEPCNT socket options. On such systems
        # (currently, Linux 2.4+, NetBSD 5+, and FreeBSD 9.0-STABLE), they can
        # be configured using the keepidle, keepintvl, and keepcnt parameters.
        # One or two parameters may be omitted, in which case the
        # system default setting for the corresponding socket option will be
        # in effect. For example,
        so_keepalive=30m::10
        # will set the idle timeout (TCP_KEEPIDLE) to 30 minutes, leave the
        # probe interval (TCP_KEEPINTVL) at its system default, and set the
        # probes count (TCP_KEEPCNT) to 10 probes.
    }

