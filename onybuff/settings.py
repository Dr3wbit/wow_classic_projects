"""
Django settings for onybuff project.
Generated by 'django-admin startproject' using Django 2.2.2.
For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['DJANGO_SECRET_KEY']
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# SECURITY WARNING: don't run with debug turned on in production!
# NOTE: Cancelling Discord login does not error when DEBUG = False
DEBUG = bool(int(os.environ['DJANGO_DEBUG']))
DEV = True

#SECURE_SSL_REDIRECT = True
ALLOWED_HOSTS = ['dev.onybuff.com', 'localhost', '127.0.0.1', (os.environ['HOST_IP'])]

LOCAL = bool(int(os.environ['DJANGO_LOCAL']))

AUTHENTICATION_BACKENDS = [
	'social_core.backends.discord.DiscordOAuth2',
	'django.contrib.auth.backends.ModelBackend',
]

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'account',
	'social_django',
	'home',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'home.middleware.SocialAuthCancelledMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if DEV:
	INTERNAL_IPS = os.environ['DJANGO_INTERNAL_IPS']
	INSTALLED_APPS.append('debug_toolbar')
	MIDDLEWARE.insert(1, 'debug_toolbar.middleware.DebugToolbarMiddleware')

ROOT_URLCONF = 'onybuff.urls'

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
#SESSION_COOKIE_SECURE = False

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [os.path.join(BASE_DIR, 'home/templates')],
		# 'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				'home.context_processors.add_navlinks_to_context',
				'social_django.context_processors.backends',
				'social_django.context_processors.login_redirect',
			],
			'loaders': [
				'django.template.loaders.filesystem.Loader',
				'django.template.loaders.app_directories.Loader',
			]
		},
	},
]

WSGI_APPLICATION = 'onybuff.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


if LOCAL:
	AUTH_USER_MODEL = 'home.User'
	SOCIAL_AUTH_USER_MODEL = 'home.User'
	DATABASES = {
		'default': {
			'ENGINE': 'django.db.backends.postgresql_psycopg2',
			'NAME': os.environ['DEV_DB_NAME'],
			'USER': os.environ['DEV_DB_USER'],
			'PASSWORD': os.environ['DEV_DB_PASS'],
			'HOST': os.environ['DEV_DB_HOST'],
			'PORT': os.environ['DEV_DB_PORT'],
			# NOTE: if CONN_MAX_AGE setting is enabled and not set to 0, idled connections will remain open between tests,
			# causing issues with test database creation
			# 'CONN_MAX_AGE': 20,
			'TEST': {
            	'MIRROR': 'default',
        	}
		},
		# 'replica': {
		# 	'ENGINE': 'django.db.backends.postgresql_psycopg2',
		# 	'NAME': 'devdevdjango_mirror',
		# 	'USER': os.environ['DEV_DB_USER'],
		# 	'PASSWORD': os.environ['DEV_DB_PASS'],
		# 	'HOST': os.environ['DEV_DB_HOST'],
		# 	'PORT': os.environ['DEV_DB_PORT'],
		# 	'TEST': {
		# 		'MIRROR': 'default'
		# 	}
		# }
	}
else:
	AUTH_USER_MODEL = 'home.User'
	SOCIAL_AUTH_USER_MODEL = 'home.User'
	DATABASES = {
		'default': {
			'ENGINE': 'django.db.backends.postgresql_psycopg2',
			'NAME': os.environ['DB_NAME'],
			'USER': os.environ['DB_USER'],
			'PASSWORD': os.environ['DB_PASS'],
			'HOST': os.environ['DB_HOST'],
			'PORT': os.environ['DB_PORT'],
		}
	}


if not DEV:

	CACHES = {
		'default': {
			'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
			'LOCATION': '127.0.0.1:11211',
			# 'LOCATION': "{}:{}".format(os.environ['HOST_IP'], '11211') if LOCAL else '127.0.0.1:11211',
		}
	}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'America/Chicago'

USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'static'))

# STATICFILES_DIRS = (
# 	os.path.join(BASE_DIR, "static"),
# )

GIF_API = os.environ['TENOR_API_KEY']
SOCIAL_AUTH_RAISE_EXCEPTIONS = False

# SOCIAL_AUTH_REDIRECT_IS_HTTPS = True
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/authorize'
SOCIAL_AUTH_LOGIN_ERROR_URL = '/'
SOCIAL_AUTH_BACKEND_ERROR_URL = '/'
SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL = True
SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS = ['username', 'email']
SOCIAL_AUTH_POSTGRES_JSONFIELD = True
SOCIAL_AUTH_LOGIN_ERROR_URL
SOCIAL_AUTH_DISCORD_KEY = os.environ['DISCORD_KEY']
SOCIAL_AUTH_DISCORD_SECRET = os.environ['DISCORD_SECRET_KEY']
SOCIAL_AUTH_DISCORD_EXTRA_DATA = [
	("avatar", "avatar"),
	("verified", "is_verified"),
	("locale", "locale"),
	("flags", "flags"),
	("bot", "is_bot"),
	("username", "disc_username"),
	("discriminator", "tag"),
	("locale", "locale"),
	]

SOCIAL_AUTH_DISCORD_SCOPE = ["email"]
SOCIAL_AUTH_DISCORD_REQUIRES_EMAIL_VALIDATION = True
SOCIAL_AUTH_DISCORD_REDIRECT_STATE = True


SOCIAL_AUTH_PIPELINE = (
  'social_core.pipeline.social_auth.social_details',
  'social_core.pipeline.social_auth.social_uid',
  'social_core.pipeline.social_auth.auth_allowed',
  'social_core.pipeline.social_auth.social_user',
  'social_core.pipeline.user.get_username',
  'social_core.pipeline.social_auth.associate_by_email',
  'social_core.pipeline.user.create_user',
  'social_core.pipeline.social_auth.associate_user',
  'social_core.pipeline.social_auth.load_extra_data',
  'social_core.pipeline.user.user_details',
)
